# abstractFactory (抽象工厂)


# 我第四个学习的设计模式


# 简介



# 定义
一种为访问类提供一个创建一组相关或相互依赖对象的接口，且访问类无须指定所要产品的具体类就能得到同族的不同等级的产品的模式结构


# 概念了解
简单工厂模式(一个工厂类)-->工厂方法模式(抽象工厂中只能生产一种产品)-->抽象工厂模式(抽象工厂中可以生产多种产品)


# 优点
当增加一个新的产品族时不需要修改原代码，满足开闭原则


# 缺点
当产品族中需要增加一个新的产品时，所有的工厂类都需要进行修改
注：这里可以写一个通用的工厂方法，作为变种，避免出现上述的情况


# 组成
抽象工厂（Abstract Factory）：提供了创建产品的接口，它包含多个创建产品的方法 newProduct()，可以创建多个不同等级的产品。
具体工厂（Concrete Factory）：主要是实现抽象工厂中的多个抽象方法，完成具体产品的创建。
抽象产品（Product）：定义了产品的规范，描述了产品的主要特性和功能 (抽象工厂模式有多个抽象产品/工厂方法有一个抽象产品)
具体产品（ConcreteProduct）：实现了抽象产品角色所定义的接口，由具体工厂来创建，它 同具体工厂之间是多对一的关系



